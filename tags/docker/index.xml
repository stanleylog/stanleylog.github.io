<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on StanleyLog - 自留地</title>
    <link>https://stanleylog.com/tags/docker/</link>
    <description>Recent content in docker on StanleyLog - 自留地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 05 Mar 2025 14:03:14 +0800</lastBuildDate>
    
	<atom:link href="https://stanleylog.com/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker笔记-Part3.创建Docker镜像</title>
      <link>https://stanleylog.com/post/docker%E7%AC%94%E8%AE%B0-part3-%E5%88%9B%E5%BB%BAdocker%E9%95%9C%E5%83%8F/</link>
      <pubDate>Wed, 05 Mar 2025 14:03:14 +0800</pubDate>
      
      <guid>https://stanleylog.com/post/docker%E7%AC%94%E8%AE%B0-part3-%E5%88%9B%E5%BB%BAdocker%E9%95%9C%E5%83%8F/</guid>
      <description>创建Dockerfile FROM busybox:latest COPY --chmod=755 &amp;lt;&amp;lt;&amp;quot;EOF&amp;quot; /start.sh echo &amp;quot;Starting...&amp;quot; for i in $(seq 1 5); do echo &amp;quot;$i&amp;quot; sleep 1 done echo &amp;quot;Exiting...&amp;quot; exit 1 EOF ENTRYPOINT /start.sh 创建镜像 ➜ docker build -t startstop . [+] Building 9.9s (7/7) FINISHED docker:default =&amp;gt; [internal] load build definition from Dockerfile 0.0s =&amp;gt; =&amp;gt; transferring dockerfile: 215B 0.0s =&amp;gt; [internal] load metadata for docker.io/library/busybox:latest 8.0s =&amp;gt; [internal] load .dockerignore 0.0s =&amp;gt; =&amp;gt; transferring context: 2B 0.0s =&amp;gt; [internal] preparing inline document 0.0s =&amp;gt; [1/2] FROM docker.io/library/busybox:latest@sha256:498a000f370d8c37927118ed80afe8adc38d1edcbfc071627d17b25c88efcab0 1.7s =&amp;gt; =&amp;gt; resolve docker.io/library/busybox:latest@sha256:498a000f370d8c37927118ed80afe8adc38d1edcbfc071627d17b25c88efcab0 0.0s =&amp;gt; =&amp;gt; sha256:498a000f370d8c37927118ed80afe8adc38d1edcbfc071627d17b25c88efcab0 10.20kB / 10.20kB 0.0s =&amp;gt; =&amp;gt; sha256:42279ede3600b4e63af075a5e27d68232ff837d9cdcaba74feffc7ab0dfec0dc 610B / 610B 0.0s =&amp;gt; =&amp;gt; sha256:31311c5853a22c04d692f6581b4faa25771d915c1ba056c74e5ec82606eefdfa 459B / 459B 0.0s =&amp;gt; =&amp;gt; sha256:9c0abc9c5bd3a7854141800ba1f4a227baa88b11b49d8207eadc483c3f2496de 2.16MB / 2.16MB 1.6s =&amp;gt; =&amp;gt; extracting sha256:9c0abc9c5bd3a7854141800ba1f4a227baa88b11b49d8207eadc483c3f2496de 0.0s =&amp;gt; [2/2] COPY --chmod=755 &amp;lt;&amp;lt;EOF /start.sh 0.0s =&amp;gt; exporting to image 0.0s =&amp;gt; =&amp;gt; exporting layers 0.0s =&amp;gt; =&amp;gt; writing image sha256:56b8a880daa5e3b8a5d47d440b37ae234020a755f1c3c6f16939aca5a0490dc3 0.0s =&amp;gt; =&amp;gt; naming to docker.io/library/startstop 0.0s 1 warning found (use docker --debug to expand): - JSONArgsRecommended: JSON arguments recommended for ENTRYPOINT to prevent unintended behavior related to OS signals (line 11) ➜ docker images REPOSITORY TAG IMAGE ID CREATED SIZE startstop</description>
    </item>
    
    <item>
      <title>Ubuntu安装Docker</title>
      <link>https://stanleylog.com/post/ubuntu%E5%AE%89%E8%A3%85docker/</link>
      <pubDate>Wed, 05 Mar 2025 10:04:22 +0800</pubDate>
      
      <guid>https://stanleylog.com/post/ubuntu%E5%AE%89%E8%A3%85docker/</guid>
      <description>&lt;p&gt;基于Ubuntu 22.04 LTS系统上安装Docker Engine28.0.1的操作手册。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker笔记-Part2.Docker常用命令</title>
      <link>https://stanleylog.com/post/docker%E7%AC%94%E8%AE%B0-part2-docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 21 Jun 2019 22:34:08 +0800</pubDate>
      
      <guid>https://stanleylog.com/post/docker%E7%AC%94%E8%AE%B0-part2-docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>&lt;p&gt;本篇文章为干货，罗列出Docker使用过程中最为常用的命令集合。 其中包括：镜像、容器、制作镜像的相关内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker笔记-Part1.CentOS安装Docker</title>
      <link>https://stanleylog.com/post/docker%E7%AC%94%E8%AE%B0-part1-centos%E5%AE%89%E8%A3%85docker/</link>
      <pubDate>Mon, 11 Feb 2019 15:15:55 +0800</pubDate>
      
      <guid>https://stanleylog.com/post/docker%E7%AC%94%E8%AE%B0-part1-centos%E5%AE%89%E8%A3%85docker/</guid>
      <description>&lt;p&gt;对于现有可落地、先进的开发工艺流程概念中最为耀眼的具体产品莫非Docker了，它强大之处在于完美的解决了复杂软件的部署及敏捷开发中的频率部署的问题，结合CI/CD与k8s形成了强大的生产力。而CentOS则是现在云环境中最为炙手可热的操作系统，它拥有这RHEL的稳定性及开源免费的优点，是很多互联网企业的最佳原则。今天我就尝试一下在CentOS上安装Docker，其中也包括国内的一些特殊原因的workaround方法。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>